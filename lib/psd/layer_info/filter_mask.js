// Generated by CoffeeScript 1.11.1
(function() {
  var FilterMask, LayerInfo,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  LayerInfo = require('../layer_info');

  module.exports = FilterMask = (function(superClass) {
    extend(FilterMask, superClass);

    FilterMask.shouldParse = function(key) {
      return key === 'FMsk';
    };

    function FilterMask(layer, length) {
      FilterMask.__super__.constructor.call(this, layer, length);
    }

    FilterMask.prototype.parse = function() {
      this.color = this.file.readSpaceColor();
      return this.opacity = this.file.readShort();
    };

    return FilterMask;

  })(LayerInfo);

}).call(this);
